{"version":3,"sources":["spark-scroll.coffee"],"names":[],"mappings":"AAAA;AAAA,EAAA,OAAO,CAAC,MAAR,CAAe,oBAAf,EAAqC,EAArC,CAEA,CAAC,QAFD,CAEU,eAFV,EAE2B;AAAA,IAiBzB,GAAA,EAAK,SAAC,OAAD,EAAU,SAAV,EAAqB,IAArB,EAA2B,aAA3B,EAA0C,MAA1C,GAAA;aAAsD,CAAA,CAAC,CAAE,IAAI,CAAC,GAAL,GAAW,aAAa,CAAC,GAAzB,GAA+B,MAAhC,EAAxD;IAAA,CAjBoB;AAAA,IAoBzB,MAAA,EAAQ,SAAC,OAAD,EAAU,SAAV,EAAqB,IAArB,EAA2B,aAA3B,EAA0C,MAA1C,GAAA;aAAsD,CAAA,CAAC,CAAE,IAAI,CAAC,GAAL,GAAW,aAAa,CAAC,GAAzB,GAA+B,SAAS,CAAC,YAAV,GAAuB,CAAtD,GAA0D,MAA3D,EAAxD;IAAA,CApBiB;AAAA,IAuBzB,MAAA,EAAQ,SAAC,OAAD,EAAU,SAAV,EAAqB,IAArB,EAA2B,aAA3B,EAA0C,MAA1C,GAAA;aAAsD,CAAA,CAAC,CAAE,IAAI,CAAC,GAAL,GAAW,aAAa,CAAC,GAAzB,GAA+B,SAAS,CAAC,YAAzC,GAAwD,MAAzD,EAAxD;IAAA,CAvBiB;GAF3B,CA4BA,CAAC,QA5BD,CA4BU,kBA5BV,EA4B8B;AAAA,IAM5B,QAAA,EACE;AAAA,MAAA,IAAA,EAAM,SAAC,CAAD,GAAA;eAAM,CAAC,CAAC,GAAF,CAAM,IAAN,EAAS,QAAT,EAAmB,CAAnB,EAAN;MAAA,CAAN;KAP0B;AAAA,IAU5B,MAAA,EACE;AAAA,MAAA,EAAA,EAAI,SAAC,CAAD,GAAA;eAAM,CAAC,CAAC,GAAF,CAAM,IAAN,EAAS,MAAT,EAAiB,CAAjB,EAAN;MAAA,CAAJ;KAX0B;AAAA,IAc5B,cAAA,EACE;AAAA,MAAA,IAAA,EAAM,SAAC,CAAD,GAAA;eAAM,IAAC,CAAA,OAAO,CAAC,QAAT,CAAkB,CAAC,CAAC,GAApB,EAAN;MAAA,CAAN;KAf0B;AAAA,IAkB5B,YAAA,EACE;AAAA,MAAA,EAAA,EAAI,SAAC,CAAD,GAAA;eAAM,IAAC,CAAA,OAAO,CAAC,QAAT,CAAkB,CAAC,CAAC,GAApB,EAAN;MAAA,CAAJ;KAnB0B;AAAA,IAsB5B,iBAAA,EACE;AAAA,MAAA,IAAA,EAAM,SAAC,CAAD,GAAA;eAAM,IAAC,CAAA,OAAO,CAAC,WAAT,CAAqB,CAAC,CAAC,GAAvB,EAAN;MAAA,CAAN;KAvB0B;AAAA,IA0B5B,eAAA,EACE;AAAA,MAAA,EAAA,EAAI,SAAC,CAAD,GAAA;eAAM,IAAC,CAAA,OAAO,CAAC,WAAT,CAAqB,CAAC,CAAC,GAAvB,EAAN;MAAA,CAAJ;KA3B0B;AAAA,IA8B5B,eAAA,EACE;AAAA,MAAA,IAAA,EAAM,SAAC,CAAD,GAAA;eAAM,IAAC,CAAA,KAAK,CAAC,UAAP,CAAkB,CAAC,CAAC,GAApB,EAAyB,IAAzB,EAAN;MAAA,CAAN;KA/B0B;AAAA,IAkC5B,aAAA,EACE;AAAA,MAAA,EAAA,EAAI,SAAC,CAAD,GAAA;eAAM,IAAC,CAAA,KAAK,CAAC,UAAP,CAAkB,CAAC,CAAC,GAApB,EAAyB,IAAzB,EAAN;MAAA,CAAJ;KAnC0B;AAAA,IAsC5B,UAAA,EACE;AAAA,MAAA,IAAA,EAAM,SAAC,CAAD,GAAA;eAAM,IAAC,CAAA,KAAK,CAAC,KAAP,CAAa,CAAC,CAAC,GAAf,EAAoB,IAApB,EAAN;MAAA,CAAN;KAvC0B;AAAA,IA0C5B,QAAA,EACE;AAAA,MAAA,EAAA,EAAI,SAAC,CAAD,GAAA;eAAM,IAAC,CAAA,KAAK,CAAC,KAAP,CAAa,CAAC,CAAC,GAAf,EAAoB,IAApB,EAAN;MAAA,CAAJ;KA3C0B;GA5B9B,CA0EA,CAAC,SA1ED,CA0EW,aA1EX,EA0E0B,SAAC,OAAD,EAAU,aAAV,EAAyB,gBAAzB,GAAA;WACxB,SAAC,KAAD,EAAQ,OAAR,EAAiB,IAAjB,GAAA;AACE,UAAA,wIAAA;AAAA,MAAA,WAAA,GAAc,CAAd,CAAA;AAAA,MACA,OAAA,GAAU,CADV,CAAA;AAAA,MAGA,SAAA,GAAY,EAHZ,CAAA;AAAA,MAIA,YAAA,GAAe,EAJf,CAAA;AAAA,MAKA,cAAA,GAAiB,CAAA,CALjB,CAAA;AAAA,MAMA,SAAA,GAAY,QAAQ,CAAC,eANrB,CAAA;AAAA,MAQA,aAAA,GAAgB,SAAA,GAAA;AAEd,YAAA,iFAAA;AAAA,QAAA,CAAA,GAAI,OAAA,GAAU,WAAd,CAAA;AAEA,QAAA,IAAG,CAAA,GAAE,CAAF,IAAQ,cAAA,IAAkB,CAA7B;AACE,UAAA,GAAA,GAAU,cAAA,IAAkB,YAAY,CAAC,MAAnC,GAAgD,cAAA,GAAe,CAA/D,GAAsE,cAA5E,CAAA;AACA,iBAAO,GAAA,IAAO,CAAP,IAAa,OAAA,GAAU,YAAa,CAAA,GAAA,CAA3C,GAAA;AACE,YAAA,CAAA,GAAI,SAAU,CAAA,YAAa,CAAA,GAAA,CAAb,CAAd,CAAA;AAEA;AAAA,iBAAA,SAAA;0BAAA;AACE;AAAA,mBAAA,4CAAA;iCAAA;AACE,gBAAA,UAAA,GAAa,gBAAiB,CAAA,IAAA,CAA9B,CAAA;AACA,gBAAA,IAA4B,UAAU,CAAC,EAAvC;AAAA,kBAAA,UAAU,CAAC,EAAE,CAAC,IAAd,CAAmB,CAAnB,EAAsB,CAAtB,CAAA,CAAA;iBAFF;AAAA,eADF;AAAA,aAFA;AAAA,YAOA,cAAA,GAAiB,EAAA,GAPjB,CADF;UAAA,CAFF;SAFA;AAcA,QAAA,IAAG,CAAA,IAAG,CAAH,IAAS,cAAA,GAAiB,YAAY,CAAC,MAA1C;AACE,UAAA,GAAA,GAAU,cAAA,GAAiB,CAArB,GAA6B,CAA7B,GAAoC,cAA1C,CAAA;AACA,iBAAO,GAAA,GAAM,YAAY,CAAC,MAAnB,IAA8B,OAAA,GAAU,YAAa,CAAA,GAAA,CAA5D,GAAA;AACE,YAAA,CAAA,GAAI,SAAU,CAAA,YAAa,CAAA,GAAA,CAAb,CAAd,CAAA;AAEA;AAAA,iBAAA,UAAA;2BAAA;AACE;AAAA,mBAAA,8CAAA;iCAAA;AACE,gBAAA,UAAA,GAAa,gBAAiB,CAAA,IAAA,CAA9B,CAAA;AACA,gBAAA,IAA8B,UAAU,CAAC,IAAzC;AAAA,kBAAA,UAAU,CAAC,IAAI,CAAC,IAAhB,CAAqB,CAArB,EAAwB,CAAxB,CAAA,CAAA;iBAFF;AAAA,eADF;AAAA,aAFA;AAAA,YAOA,cAAA,GAAiB,EAAA,GAPjB,CADF;UAAA,CAFF;SAdA;eA0BA,WAAA,GAAc,QA5BA;MAAA,CARhB,CAAA;AAAA,MAuCA,aAAA,GAAgB,CAAC,CAAC,QAAF,CAAW,aAAX,EAA0B,EAA1B,EAA8B;AAAA,QAAC,OAAA,EAAS,IAAV;AAAA,QAAgB,OAAA,EAAS,EAAzB;OAA9B,CAvChB,CAAA;AAAA,MA0CA,cAAA,GAAiB,SAAA,GAAA;AACf,YAAA,kDAAA;AAAA,QAAA,OAAA,GAAU,KAAV,CAAA;AAAA,QACA,IAAA,GAAO,OAAQ,CAAA,CAAA,CAAE,CAAC,qBAAX,CAAA,CADP,CAAA;AAAA,QAEA,aAAA,GAAgB,SAAS,CAAC,qBAAV,CAAA,CAFhB,CAAA;AAIA,aAAA,oBAAA;wCAAA;eAAwC,QAAQ,CAAC;;WAC/C;AAAA,UAAA,UAAA,GAAa,aAAc,CAAA,QAAQ,CAAC,OAAO,CAAC,QAAjB,CAAd,CAAyC,OAAzC,EAAkD,SAAlD,EAA6D,IAA7D,EAAmE,aAAnE,EAAkF,QAAQ,CAAC,OAAO,CAAC,MAAnG,CAAb,CAAA;AACA,UAAA,IAAG,UAAA,KAAc,CAAA,CAAC,OAAlB;AACE,YAAA,OAAA,GAAU,IAAV,CAAA;AAAA,YACA,SAAU,CAAA,UAAA,CAAV,GAAwB,QADxB,CAAA;AAAA,YAEA,MAAA,CAAA,SAAiB,CAAA,OAAA,CAFjB,CADF;WAFF;AAAA,SAJA;AAWA,QAAA,IAAG,OAAH;AACE,UAAA,YAAA,GAAe,EAAf,CAAA;AACA,eAAA,oBAAA,GAAA;AAAA,YAAA,YAAY,CAAC,IAAb,CAAkB,CAAA,CAAC,OAAnB,CAAA,CAAA;AAAA,WADA;iBAEA,YAAY,CAAC,IAAb,CAAkB,SAAC,CAAD,EAAG,CAAH,GAAA;mBAAS,CAAA,GAAI,EAAb;UAAA,CAAlB,EAHF;SAZe;MAAA,CA1CjB,CAAA;AAAA,MA6DA,WAAA,GAAc,KAAK,CAAC,MAAN,CAAa,IAAI,CAAC,WAAlB,EAA+B,SAAC,IAAD,GAAA;AAC3C,YAAA,uEAAA;AAAA,QAAA,IAAA,CAAA,IAAA;AAAA,gBAAA,CAAA;SAAA;AAGA,QAAA,IAAG,gCAAH;AAAkC,UAAA,WAAA,CAAA,CAAA,CAAlC;SAHA;AAAA,QAKA,SAAA,GAAY,EALZ,CAAA;AAAA,QAMA,YAAA,GAAe,EANf,CAAA;AAAA,QAUA,IAAA,GAAO,OAAQ,CAAA,CAAA,CAAE,CAAC,qBAAX,CAAA,CAVP,CAAA;AAAA,QAWA,aAAA,GAAgB,SAAS,CAAC,qBAAV,CAAA,CAXhB,CAAA;AAaA,aAAA,eAAA;mCAAA;AAME,UAAA,CAAA,GAAI,OAAO,CAAC,UAAR,CAAmB,CAAnB,CAAJ,CAAA;AACA,UAAA,IAAI,CAAA,GAAI,EAAJ,IAAU,CAAA,GAAI,EAAlB;AACE,YAAA,QAAQ,CAAC,OAAT,GAAmB;AAAA,cAAE,CAAA,EAAG,OAAL;aAAnB,CAAA;AAAA,YACA,KAAA,GAAQ,OAAO,CAAC,KAAR,CAAc,aAAd,CADR,CAAA;AAAA,YAEA,QAAA,GAAW,QAAQ,CAAC,OAAO,CAAC,QAAjB,GAA4B,KAAM,CAAA,CAAA,CAF7C,CAAA;AAAA,YAGA,MAAA,GAAS,QAAQ,CAAC,OAAO,CAAC,MAAjB,GAA0B,CAAA,CAAC,KAAO,CAAA,CAAA,CAH3C,CAAA;AAAA,YAIA,OAAA,GAAU,aAAc,CAAA,QAAA,CAAd,CAAwB,OAAxB,EAAiC,SAAjC,EAA4C,IAA5C,EAAkD,aAAlD,EAAiE,MAAjE,CAJV,CAAA;AAKA,YAAA,IAAU,SAAU,CAAA,OAAA,CAApB;AAAA,oBAAA,CAAA;aANF;WADA;AAUA,eAAA,aAAA;4BAAA;AACE,YAAA,MAAA,GAAS,CAAC,CAAC,KAAF,CAAQ,GAAR,CAAT,CAAA;AACA,YAAA,IAAG,gBAAiB,CAAA,MAAO,CAAA,CAAA,CAAP,CAApB;AACE,cAAA,QAAQ,CAAC,YAAT,QAAQ,CAAC,UAAY,GAArB,CAAA;AAAA,cACA,QAAQ,CAAC,OAAQ,CAAA,CAAA,CAAjB,GACE;AAAA,gBAAA,KAAA,EAAO,MAAP;AAAA,gBACA,GAAA,EAAK,CADL;eAFF,CAAA;AAAA,cAIA,MAAA,CAAA,QAAgB,CAAA,CAAA,CAJhB,CADF;aAFF;AAAA,WAVA;AAAA,UAqBA,QAAQ,CAAC,OAAT,GAAmB,OArBnB,CAAA;AAAA,UAsBA,QAAQ,CAAC,KAAT,GAAiB,KAtBjB,CAAA;AAAA,UA0BA,SAAU,CAAA,OAAA,CAAV,GAAqB,QA1BrB,CANF;AAAA,SAbA;AA+CA,aAAA,oBAAA,GAAA;AAAA,UAAA,YAAY,CAAC,IAAb,CAAkB,CAAA,CAAC,OAAnB,CAAA,CAAA;AAAA,SA/CA;AAAA,QAgDA,YAAY,CAAC,IAAb,CAAkB,SAAC,CAAD,EAAG,CAAH,GAAA;iBAAS,CAAA,GAAI,EAAb;QAAA,CAAlB,CAhDA,CAAA;AAAA,QAkDA,WAAA,GAAc,OAAA,GAAU,OAAO,CAAC,OAlDhC,CAAA;eAmDA,aAAA,CAAA,EApD2C;MAAA,CAA/B,EAsDZ,IAtDY,CA7Dd,CAAA;AAAA,MAuHA,QAAA,GAAW,SAAA,GAAA;AACT,QAAA,OAAA,GAAU,OAAO,CAAC,OAAlB,CAAA;eACA,aAAA,CAAA,EAFS;MAAA,CAvHX,CAAA;AAAA,MA2HA,QAAA,GAAW,CAAC,CAAC,QAAF,CAAW,cAAX,EAA2B,GAA3B,EAAgC;AAAA,QAAC,OAAA,EAAS,KAAV;OAAhC,CA3HX,CAAA;AAAA,MA6HA,OAAO,CAAC,OAAR,CAAgB,OAAhB,CAAwB,CAAC,EAAzB,CAA4B,QAA5B,EAAsC,QAAtC,CA7HA,CAAA;AAAA,MA8HA,OAAO,CAAC,OAAR,CAAgB,OAAhB,CAAwB,CAAC,EAAzB,CAA4B,QAA5B,EAAsC,QAAtC,CA9HA,CAAA;aAgIA,KAAK,CAAC,GAAN,CAAU,UAAV,EAAsB,SAAA,GAAA;AACpB,QAAA,OAAO,CAAC,OAAR,CAAgB,OAAhB,CAAwB,CAAC,GAAzB,CAA6B,QAA7B,EAAuC,QAAvC,CAAA,CAAA;eACA,OAAO,CAAC,OAAR,CAAgB,OAAhB,CAAwB,CAAC,GAAzB,CAA6B,QAA7B,EAAuC,QAAvC,EAFoB;MAAA,CAAtB,EAjIF;IAAA,EADwB;EAAA,CA1E1B,CAAA,CAAA;AAAA","file":"spark-scroll.js","sourceRoot":"/source/","sourcesContent":["angular.module('gilbox.sparkScroll', [])\n\n.constant 'sparkFormulas', {\n\n  # formulas are always in the format: variable or variable<offset>\n  #   (note that you cannot combine formula variables)\n  # for example:\n  #\n  #      top+40\n  #      top-120\n  #      top\n  #      center\n  #      center-111\n  #\n  # are valid formulas. (top40 is valid as well but less intuitive)\n  #\n  # each property of the sparkFormulas object is a formula variable\n\n  # top of the element hits the top of the viewport\n  top: (element, container, rect, containerRect, offset) ->  ~~(rect.top - containerRect.top + offset)\n\n  # top of the element hits the center of the viewport\n  center: (element, container, rect, containerRect, offset) ->  ~~(rect.top - containerRect.top - container.clientHeight/2 + offset)\n\n  # top of the element hits the bottom of the viewport\n  bottom: (element, container, rect, containerRect, offset) ->  ~~(rect.top - containerRect.top - container.clientHeight + offset)\n}\n\n.constant 'sparkActionProps', {\n\n  # When the up, down fns are called, `this` is the current keyFrame object and `o` is the action object\n  # therefore @element and @scope refer to the current element and it's scope\n\n  # fn reference that is called when scrolled down past keyframe\n  'onDown':\n    down: (o)-> o.val(@, 'onDown', o)\n\n  # fn reference that is called when scrolled up past keyframe\n  'onUp':\n    up: (o)-> o.val(@, 'onUp', o)\n\n  # class(es) added when scrolled down past keyframe,\n  'downAddClass':\n    down: (o)-> @element.addClass(o.val)\n\n  # class(es) added when scrolled up past keyframe,\n  'upAddClass':\n    up: (o)-> @element.addClass(o.val)\n\n  # class(es) removed when scrolled down past keyframe\n  'downRemoveClass':\n    down: (o)-> @element.removeClass(o.val)\n\n  # class(es) removed when scrolled up past keyframe\n  'upRemoveClass':\n    up: (o)-> @element.removeClass(o.val)\n\n  # broadcasts an event when scrolled down past keyframe\n  'downBroadcast':\n    down: (o)-> @scope.$broadcast(o.val, @)\n\n  # broadcasts an event when scrolled up past keyframe\n  'upBroadcast':\n    up: (o)-> @scope.$broadcast(o.val, @)\n\n  # emits an event when scrolled down past keyframe\n  'downEmit':\n    down: (o)-> @scope.$emit(o.val, @)\n\n  # emits an event when scrolled up past keyframe\n  'upEmit':\n    up: (o)-> @scope.$emit(o.val, @)\n}\n\n.directive 'sparkScroll', ($window, sparkFormulas, sparkActionProps) ->\n  (scope, element, attr) ->\n    prevScrollY = 0\n    scrollY = 0\n\n    sparkData = {}\n    actionFrames = []\n    actionFrameIdx = -1\n    container = document.documentElement\n\n    actionsUpdate = ->\n\n      d = scrollY - prevScrollY\n\n      if d<0 and actionFrameIdx >= 0  # scroll up: don't apply on page load (only apply on page load for downward movement)\n        idx = if (actionFrameIdx >= actionFrames.length) then actionFrameIdx-1 else actionFrameIdx\n        while (idx >= 0 and scrollY < actionFrames[idx])\n          c = sparkData[actionFrames[idx]]\n\n          for a, o of c.actions\n            for prop in o.props\n              actionProp = sparkActionProps[prop]\n              actionProp.up.call(c, o) if actionProp.up\n\n          actionFrameIdx = --idx\n\n      if d>=0 and actionFrameIdx < actionFrames.length  # scroll down: will apply on page load\n        idx = if (actionFrameIdx < 0) then 0 else actionFrameIdx\n        while (idx < actionFrames.length and scrollY > actionFrames[idx])\n          c = sparkData[actionFrames[idx]]\n\n          for a, o of c.actions\n            for prop in o.props\n              actionProp = sparkActionProps[prop]\n              actionProp.down.call(c, o) if actionProp.down\n\n          actionFrameIdx = ++idx\n\n      prevScrollY = scrollY\n\n\n    actionsUpdate = _.throttle(actionsUpdate, 66, {leading: true, maxWait: 66})\n\n\n    recalcFormulas = ->\n      changed = false\n      rect = element[0].getBoundingClientRect()\n      containerRect = container.getBoundingClientRect()\n\n      for scrollY, keyFrame of sparkData when keyFrame.formula\n        newScrollY = sparkFormulas[keyFrame.formula.variable](element, container, rect, containerRect, keyFrame.formula.offset)\n        if newScrollY != ~~scrollY\n          changed = true\n          sparkData[newScrollY] = keyFrame\n          delete sparkData[scrollY]\n\n      if changed\n        actionFrames = []\n        actionFrames.push(~~scrollY) for scrollY of sparkData\n        actionFrames.sort (a,b) -> a > b\n        # @todo: now are we screwed if something was already passed by ?\n\n\n    watchCancel = scope.$watch attr.sparkScroll, (data) ->\n      return unless data\n\n      # useful in angular < v1.3 where one-time binding isn't available\n      if attr.sparkScrollBindOnce? then watchCancel()\n\n      sparkData = {}\n      actionFrames = []\n\n      # this is used for formula comprehension... a possible performance improvement might\n      # forgo these calculations by adding some option or deferring calculation automatically\n      rect = element[0].getBoundingClientRect()\n      containerRect = container.getBoundingClientRect()\n\n      for scrollY, keyFrame of data\n#        actionCount = 0\n#        grossActionCount = 0\n\n        # formula comprehension\n        # when scrollY first char is not a digit, we assume this is a formula\n        c = scrollY.charCodeAt(0)\n        if (c < 48 or c > 57)\n          keyFrame.formula = { f: scrollY }\n          parts = scrollY.match(/^(\\w+)(.*)$/)\n          variable = keyFrame.formula.variable = parts[1]\n          offset = keyFrame.formula.offset = ~~parts[2]\n          scrollY = sparkFormulas[variable](element, container, rect, containerRect, offset)\n          return if sparkData[scrollY]  # silent death for overlapping scrollY's (assume that the element isn't ready)\n\n        # put actions in actions sub-object\n        for k,v of keyFrame\n          ksplit = k.split(',')\n          if sparkActionProps[ksplit[0]] # @todo: rigorous check ? (we assume that if the first action is legit then they all are)\n            keyFrame.actions or= { }  # could be more efficient to make actions an array\n            keyFrame.actions[k] = # action object\n              props: ksplit\n              val: v\n            delete keyFrame[k]\n#           actionCount++\n#           grossActionCount += ksplit.length\n\n        keyFrame.element = element\n        keyFrame.scope = scope\n#        keyFrame.actionCount = actionCount\n#        keyFrame.grossActionCount = grossActionCount\n\n        sparkData[scrollY] = keyFrame\n\n      actionFrames.push(~~scrollY) for scrollY of sparkData\n      actionFrames.sort (a,b) -> a > b\n\n      prevScrollY = scrollY = $window.scrollY\n      actionsUpdate()\n\n    , true  # deep watch\n\n    # respond to scroll event\n\n    onScroll = ->\n      scrollY = $window.scrollY\n      actionsUpdate()\n\n    onResize = _.debounce(recalcFormulas, 100, {leading: false})\n\n    angular.element($window).on 'scroll', onScroll\n    angular.element($window).on 'resize', onResize\n\n    scope.$on '$destroy', ->\n      angular.element($window).off 'scroll', onScroll\n      angular.element($window).off 'resize', onResize"]}
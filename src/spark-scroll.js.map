{"version":3,"sources":["spark-scroll.coffee"],"names":[],"mappings":"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","file":"spark-scroll.js","sourceRoot":"/source/","sourcesContent":["if (typeof define == 'function' && define.amd)\n  # When using rekapi with requirejs, you must handle the dependencies yourself, because\n  # here we assume that if require is being used then rekapi has already been loaded in\n  Rekapi = window.Rekapi or (require.defined('rekapi') and require('rekapi'))\n\n  # If any other deps are being loaded in without being exposed in the global namespace,\n  # the same as above applies\n  _ = window._ or (if require.defined('lodash') then require('lodash') else require('underscore'))\n  AnimationFrame = window.AnimationFrame or (if require.defined('animationFrame') then require('animationFrame') else require('AnimationFrame'))\nelse\n  [Rekapi, _, AnimationFrame] = [window.Rekapi, window._, window.AnimationFrame]\n\n\n\n\nangular.module('gilbox.sparkScroll', [])\n\n# sparkAnimator can be overridden to use any animation engine\n# so long as the sparkAnimator service supports the following Rekapi-like\n# interface:\n#\n# actor = sparkAnimator.addActor({ context: <dom element> })  # works just like Rekapi.addActor(...)\n# actor.keyframe(...)\n# actor.moveKeyframe(...)\n# actor.removeAllKeyframes(...)\n# sparkAnimator.update(...)       # works just like Rekapi.update(...)\n#\n# See the Rekapi docs for implementation details   http://rekapi.com/dist/doc/\n.factory 'sparkAnimator', ($document) -> Rekapi && new Rekapi($document[0].body)\n\n.constant 'sparkFormulas', {\n\n  # formulas are always in the format: variable or variable<offset>\n  #   (note that you cannot combine formula variables)\n  # for example:\n  #\n  #      top+40\n  #      top-120\n  #      top\n  #      center\n  #      center-111\n  #\n  # are valid formulas. (top40 is valid as well but less intuitive)\n  #\n  # each property of the sparkFormulas object is a formula variable\n\n  # top of the element hits the top of the viewport\n  top: (element, container, rect, containerRect, offset) ->  ~~(rect.top - containerRect.top + offset)\n\n  # top of the element hits the center of the viewport\n  center: (element, container, rect, containerRect, offset) ->  ~~(rect.top - containerRect.top - container.clientHeight/2 + offset)\n\n  # top of the element hits the bottom of the viewport\n  bottom: (element, container, rect, containerRect, offset) ->  ~~(rect.top - containerRect.top - container.clientHeight + offset)\n}\n\n.constant 'sparkActionProps', {\n\n  # When the up, down fns are called, `this` is the current keyFrame object and `o` is the action object\n  # therefore @element and @scope refer to the current element and it's scope\n\n  # fn reference that is called when scrolled down past keyframe\n  'onDown':\n    down: (o)-> o.val(@, 'onDown', o)\n\n  # fn reference that is called when scrolled up past keyframe\n  'onUp':\n    up: (o)-> o.val(@, 'onUp', o)\n\n  # class(es) added when scrolled down past keyframe,\n  'downAddClass':\n    down: (o)-> @element.addClass(o.val)\n\n  # class(es) added when scrolled up past keyframe,\n  'upAddClass':\n    up: (o)-> @element.addClass(o.val)\n\n  # class(es) removed when scrolled down past keyframe\n  'downRemoveClass':\n    down: (o)-> @element.removeClass(o.val)\n\n  # class(es) removed when scrolled up past keyframe\n  'upRemoveClass':\n    up: (o)-> @element.removeClass(o.val)\n\n  # broadcasts an event when scrolled down past keyframe\n  'downBroadcast':\n    down: (o)-> @scope.$broadcast(o.val, @)\n\n  # broadcasts an event when scrolled up past keyframe\n  'upBroadcast':\n    up: (o)-> @scope.$broadcast(o.val, @)\n\n  # emits an event when scrolled down past keyframe\n  'downEmit':\n    down: (o)-> @scope.$emit(o.val, @)\n\n  # emits an event when scrolled up past keyframe\n  'upEmit':\n    up: (o)-> @scope.$emit(o.val, @)\n}\n\n.service 'sparkSetup', ($interval, $rootScope) ->\n  int = 0\n  @enableInvalidationInterval = (delay = 1000) ->\n    $interval.cancel(int) if int\n    int = $interval (-> $rootScope.$broadcast 'sparkInvalidate'), delay, 0, false\n\n  @disableInvalidationInterval = -> $interval.cancel(int)\n  @\n\ndirectiveFn = ($window, sparkFormulas, sparkActionProps, sparkAnimator) ->\n  (scope, element, attr) ->\n\n    hasAnimateAttr = attr.hasOwnProperty('sparkScrollAnimate')  # when using spark-scroll-animate directive animation is enabled\n    isAnimated = hasAnimateAttr\n\n    actor = isAnimated && sparkAnimator.addActor({ context: element[0] })\n    y = 0\n    prevScrollY = 0\n    scrollY = 0\n    animationFrame = AnimationFrame && new AnimationFrame()\n    updating = false\n\n    sparkData = {}\n    actionFrames = []\n    actionFrameIdx = -1\n    container = document.documentElement\n\n    actionsUpdate = ->\n\n      d = scrollY - prevScrollY\n\n      if d<0 and actionFrameIdx >= 0  # scroll up: don't apply on page load (only apply on page load for downward movement)\n        idx = if (actionFrameIdx >= actionFrames.length) then actionFrameIdx-1 else actionFrameIdx\n        while (idx >= 0 and scrollY < actionFrames[idx])\n          c = sparkData[actionFrames[idx]]\n\n          for a, o of c.actions\n            for prop in o.props\n              actionProp = sparkActionProps[prop]\n              actionProp.up.call(c, o) if actionProp.up\n\n          actionFrameIdx = --idx\n\n      if d>=0 and actionFrameIdx < actionFrames.length  # scroll down: will apply on page load\n        idx = if (actionFrameIdx < 0) then 0 else actionFrameIdx\n        while (idx < actionFrames.length and scrollY > actionFrames[idx])\n          c = sparkData[actionFrames[idx]]\n\n          for a, o of c.actions\n            for prop in o.props\n              actionProp = sparkActionProps[prop]\n              actionProp.down.call(c, o) if actionProp.down\n\n          actionFrameIdx = ++idx\n\n      prevScrollY = scrollY\n\n\n    actionsUpdate = _.throttle(actionsUpdate, 66, {leading: true, maxWait: 66})\n\n\n    # update for spark-scroll-animate (sparkAnimator-based) animation\n    update = ->\n      d = scrollY - y\n      ad = Math.abs(d)\n      if ad < 1.5\n        updating = false\n        y = scrollY\n        sparkAnimator.update(y)\n      else\n        updating = true\n        y += if ad>8 then d*0.25 else (if d > 0 then 1 else -1) # ease the scroll\n        sparkAnimator.update(parseInt(y))\n        animationFrame.request(update)\n\n\n    # automatic conversion from camelCase to dashed-case for css properties\n    dashersize = (str) ->\n      str.replace(/\\W+/g, '-').replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase()\n\n\n    recalcFormulas = ->\n      changed = false\n      rect = element[0].getBoundingClientRect()\n      containerRect = container.getBoundingClientRect()\n\n      for scrollY, keyFrame of sparkData when keyFrame.formula\n        newScrollY = keyFrame.formula.fn(element, container, rect, containerRect, keyFrame.formula.offset)\n        if newScrollY != ~~scrollY\n          changed = true\n          actor.moveKeyframe(~~scrollY, newScrollY) if keyFrame.anims and hasAnimateAttr # the ~~ is necessary :(\n          sparkData[newScrollY] = keyFrame\n          delete sparkData[scrollY]\n\n      if changed\n        actionFrames = []\n        actionFrames.push(~~scrollY) for scrollY of sparkData\n        actionFrames.sort (a,b) -> a > b\n        # @todo: now are we screwed if something was already passed by ?\n\n\n    watchCancel = scope.$watch attr[if hasAnimateAttr then 'sparkScrollAnimate' else 'sparkScroll'], (data) ->\n      return unless data\n\n      # useful in angular < v1.3 where one-time binding isn't available\n      if attr.sparkScrollBindOnce? then watchCancel()\n\n      actor.removeAllKeyframes() if hasAnimateAttr\n\n      # element ease property\n      elmEase = data.ease || 'linear';\n      delete data.ease\n      animCount = 0\n\n      sparkData = {}\n      actionFrames = []\n\n      # this is used for formula comprehension... a possible performance improvement might\n      # forgo these calculations by adding some option or deferring calculation automatically\n      rect = element[0].getBoundingClientRect()\n      containerRect = container.getBoundingClientRect()\n\n      for scrollY, keyFrame of data\n        actionCount = 0\n\n        # formula comprehension\n        # when scrollY first char is not a digit, we assume this is a formula\n        c = scrollY.charCodeAt(0)\n        if (c < 48 or c > 57)\n          parts = scrollY.match(/^(\\w+)(.*)$/)\n          formula =\n            fn: sparkFormulas[parts[1]],\n            offset: ~~parts[2]\n\n          scrollY = formula.fn(element, container, rect, containerRect, formula.offset)\n          return if sparkData[scrollY]  # silent death for overlapping scrollY's (assume that the element isn't ready)\n\n        # keyframe ease property\n        # (will override or fallback to element ease property)\n        ease = {}\n        kfEase = elmEase\n        if keyFrame.ease?\n          if angular.isObject(keyFrame.ease)\n            ease = keyFrame.ease\n          else\n            kfEase = keyFrame.ease\n          delete keyFrame.ease\n\n        for k,v of keyFrame\n            ksplit = k.split(',')\n\n            # put actions in actions sub-object\n            if sparkActionProps[ksplit[0]] # @todo: rigorous check ? (we assume that if the first action is legit then they all are)\n\n              keyFrame.actions or= { }  # could be more efficient to make actions an array\n              keyFrame.actions[k] = # action object\n                props: ksplit\n                val: v\n              delete keyFrame[k]\n              actionCount++\n\n            # put animations in anims sub-object\n            else # since it's not an action, assume it's an animation property\n\n              # comprehension of array-notation for easing\n              # (will override or fall back to keyframe ease propery as needed)\n              keyFrame.anims or= {}\n              dprop = dashersize(k)\n              v = [v, kfEase] unless angular.isArray(v)\n              o = {}\n              o[dprop] = v[1]\n              angular.extend(ease, o)\n\n              keyFrame.anims[dprop] = v[0]\n              delete keyFrame[k]\n\n        if keyFrame.anims && hasAnimateAttr\n          actor.keyframe(scrollY, keyFrame.anims, ease)\n          animCount++\n\n        keyFrame.formula = formula\n        keyFrame.element = element\n        keyFrame.scope = scope\n  #        keyFrame.actionCount = actionCount\n\n        sparkData[scrollY] = keyFrame\n        actionFrames.push(~~scrollY) if actionCount\n\n      isAnimated = hasAnimateAttr && !! animCount\n\n      actionFrames.sort (a,b) -> a > b\n\n      prevScrollY = scrollY = $window.scrollY\n      update() if isAnimated\n      actionsUpdate()\n\n    , true  # deep watch\n\n    # respond to scroll event\n\n    onScroll = ->\n      scrollY = $window.scrollY\n      actionsUpdate()\n      update() if isAnimated && !updating # debounced update\n\n    onInvalidate = _.debounce(recalcFormulas, 100, {leading: false})\n\n    angular.element($window).on 'scroll', onScroll\n    angular.element($window).on 'resize', onInvalidate\n    scope.$on 'sparkInvalidate', onInvalidate\n\n    scope.$on '$destroy', ->\n      sparkAnimator.removeActor(actor) if isAnimated\n      angular.element($window).off 'scroll', onScroll\n      angular.element($window).off 'resize', onInvalidate\n\n\nangular.module('gilbox.sparkScroll')\n  .directive 'sparkScroll',        ['$window', 'sparkFormulas', 'sparkActionProps', 'sparkAnimator', directiveFn]\n  .directive 'sparkScrollAnimate', ['$window', 'sparkFormulas', 'sparkActionProps', 'sparkAnimator', directiveFn]\n"]}
{"version":3,"sources":["spark-scroll.coffee"],"names":[],"mappings":"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","file":"spark-scroll.js","sourceRoot":"/source/","sourcesContent":["angular.module('gilbox.sparkScroll', [])\n.directive 'sparkScroll', ($window) ->\n  (scope, element, attr) ->\n    prevScrollY = 0\n    scrollY = 0\n\n    sparkData = {}\n    actionFrames = []\n    actionFrameIdx = -1\n\n    actionProps = {\n\n      # When the up, down fns are called, `this` is the current keyFrame object\n\n      # keyframe onUp property\n      # fn reference that is called when scrolled up past keyframe\n      'onUp':\n        up: -> @actions.onUp(@)\n\n      # keyframe onDown property\n      # fn reference that is called when scrolled down past keyframe\n      'onDown':\n        down: -> @actions.onDown(@)\n\n      # keyframe class property\n      # class(es) added when scrolled down past keyframe,\n      # but removed when scrolled up past keyframe\n      'class':\n        up: -> element.removeClass(@actions['class'])\n        down: -> element.addClass(@actions['class'])\n\n      # keyframe classUp property\n      # class(es) added when scrolled up past keyframe,\n      # but removed when scrolled down past keyframe\n      'classUp':\n        up: -> element.addClass(@actions.classUp)\n        down: -> element.removeClass(@actions.classUp)\n\n      # keyframe classRemove property\n      # class(es) removed when scrolled down past keyframe\n      'classRemove':\n        down: -> element.removeClass(@actions.classRemove)\n\n      # keyframe classUpRemove property\n      # class(es) removed when scrolled up past keyframe\n      'classUpRemove':\n        up: -> element.removeClass(@actions.classUpRemove)\n\n    }\n    actionPropKeys = _.keys(actionProps)\n\n    actionsUpdate = ->\n\n      d = scrollY - prevScrollY\n\n      if d<0 and actionFrameIdx >= 0  # scroll up: don't apply on page load (only apply on page load for downward movement)\n        idx = if (actionFrameIdx >= actionFrames.length) then actionFrameIdx-1 else actionFrameIdx\n        while (idx >= 0 and scrollY < actionFrames[idx])\n          c = sparkData[actionFrames[idx]]\n\n          for prop of c.actions\n            actionProp = actionProps[prop]\n            actionProp.up.apply(c) if actionProp?.up\n\n          actionFrameIdx = --idx\n\n      if d>=0 and actionFrameIdx < actionFrames.length  # scroll down: will apply on page load\n        idx = if (actionFrameIdx < 0) then 0 else actionFrameIdx\n        while (idx < actionFrames.length and scrollY > actionFrames[idx])\n          c = sparkData[actionFrames[idx]]\n\n          for prop of c.actions\n            actionProp = actionProps[prop]\n            actionProp.down.apply(c) if actionProp?.down\n\n          actionFrameIdx = ++idx\n\n\n    actionsUpdate = _.debounce(actionsUpdate, 33, {leading: true, maxWait: 33})\n\n\n    watchCancel = scope.$watch attr.sparkScroll, (data) ->\n      return unless data\n\n      # @todo: parse out actions so we don't have to check non-actions in actionsUpdate\n\n      # useful in angular < v1.3 where one-time binding isn't available\n      if attr.sparkScrollBindOnce? then watchCancel()\n\n      sparkData = data\n      actionFrames = []\n\n      for scrollY, keyFrame of sparkData\n\n        actionCount = 0\n\n        # put actions in actions sub-object\n        for actionProp in actionPropKeys\n          if keyFrame[actionProp]\n            actionCount++\n            keyFrame.actions or= { }\n            keyFrame.actions[actionProp] = keyFrame[actionProp]\n            delete keyFrame[actionProp]\n\n        keyFrame.actionCount = actionCount\n        keyFrame.elm = element\n        keyFrame.scope = scope\n        keyFrame.domElm = element[0]\n\n      actionFrames.push(parseInt(scrollY)) for scrollY of sparkData\n      actionFrames.sort (a,b) -> a > b\n\n      prevScrollY = scrollY = $window.scrollY\n      actionsUpdate()\n      console.log \"-->sparkData\", sparkData\n      \n    , true  # deep watch\n\n    # respond to scroll event\n    angular.element($window).on 'scroll', ->\n      prevScrollY = scrollY\n      scrollY = $window.scrollY\n      actionsUpdate()\n\n    scope.$on '$destroy', ->\n      angular.element($window).off 'scroll'"]}
{"version":3,"sources":["kapi-scroll2.coffee"],"names":[],"mappings":"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","file":"kapi-scroll2.js","sourceRoot":"/source/","sourcesContent":["angular.module('gilbox.kapiScroll', [])\n.factory 'rekapi', ($document) -> new Rekapi($document[0].body)\n.directive 'kapiScroll', (rekapi, $window) ->\n  (scope, element, attr) ->\n    actor = rekapi.addActor({ context: element[0] })\n    y = 0\n    scrollY = 0\n    animationFrame = new AnimationFrame()\n    updating = false\n\n    update = ->\n      d = scrollY - y\n      ad = Math.abs(d)\n      if ad < 1.5\n        updating = false\n        y = scrollY\n        rekapi.update(y)\n      else\n        updating = true\n        y += if ad>8 then d*0.25 else (if d > 0 then 1 else -1) # ease the scroll\n        rekapi.update(parseInt(y))\n        animationFrame.request(update)\n\n    scope.$watch attr.kapiScroll, (data) ->\n      return unless data\n\n      # element ease property\n      elmEase = data.ease || 'linear';\n      delete data.ease\n\n      # setup the rekapi keyframes\n      for scrollY, keyFrame of data\n\n        # keyframe ease property\n        # (will override or fallback to element ease property)\n        ease = {}\n        kfEase = elmEase\n        if keyFrame.ease?\n          if angular.isObject(keyFrame.ease)\n            ease = keyFrame.ease\n          else\n            kfEase = keyFrame.ease\n          delete keyFrame.ease\n\n        # comprehension of array-notation for easing\n        # (will override or fall back to keyframe ease propery as needed)\n        for prop, val of keyFrame\n          val = [val, kfEase] if not angular.isArray(val)\n          o = {}\n          o[prop] = val[1]\n          angular.extend(ease, o)\n          keyFrame[prop] = val[0]\n\n        actor.keyframe(scrollY, keyFrame, ease)\n\n      y = scrollY = $window.scrollY\n      update()\n    , true  # deep watch\n\n    # respond to scroll event\n    angular.element($window).on 'scroll', ->\n      scrollY = $window.scrollY\n      update() if !updating # debounced update\n\n    scope.$on '$destroy', -> rekapi.removeActor(actor)"]}
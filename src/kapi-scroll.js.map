{"version":3,"sources":["kapi-scroll.coffee"],"names":[],"mappings":"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","file":"kapi-scroll.js","sourceRoot":"/source/","sourcesContent":["  angular.module('gilbox.kapiScroll', [])\n    .factory 'rekapi', ($document) -> new Rekapi($document[0].body)\n    .directive 'kapiScroll', (rekapi, $window) ->\n      (scope, element, attr) ->\n        actor = rekapi.addActor({ context: element[0] })\n        y = 0\n        scrollY = 0\n        animationFrame = new AnimationFrame()\n        updating = false\n\n        actions = {}\n        actionFrames = []\n        actionFrameIdx = -1\n\n        actionsUpdate = (d) ->\n\n          if d<0 and actionFrameIdx >= 0  # only apply on page load for downward movement\n            idx = if (actionFrameIdx >= actionFrames.length) then actionFrameIdx-1 else actionFrameIdx\n            while (idx >= 0 and y < actionFrames[idx])\n              c = actions[actionFrames[idx]]\n\n              element.removeClass(c.class) if c.class\n              element.addClass(c.classUp) if c.classUp\n              element.removeClass(c.classUpRemove) if c.classUpRemove\n              c.onUp() if c.onUp\n\n              actionFrameIdx = --idx\n\n          if d>=0 and actionFrameIdx < actionFrames.length\n            idx = if (actionFrameIdx < 0) then 0 else actionFrameIdx\n            while (idx < actionFrames.length and y > actionFrames[idx])\n              c = actions[actionFrames[idx]]\n\n              element.addClass(c.class) if c.class\n              element.removeClass(c.classUp) if c.classUp\n              element.removeClass(c.classRemove) if c.classRemove\n              c.onDown() if c.onDown\n\n              actionFrameIdx = ++idx\n\n\n        update = ->\n          d = scrollY - y\n          ad = Math.abs(d)\n          if ad < 1.5\n            updating = false\n            y = scrollY\n            rekapi.update(y)\n          else\n            updating = true\n            y += if ad>8 then d*0.25 else (if d > 0 then 1 else -1) # ease the scroll\n            rekapi.update(parseInt(y))\n            animationFrame.request(update)\n\n          actionsUpdate(d)  # todo: is there a better place for this? debounce this more ?\n\n\n        # automatic conversion from camelCase to dashed-case\n        dashersize = (str) ->\n          str.replace(/\\W+/g, '-').replace(/([a-z\\d])([A-Z])/g, '$1-$2')\n\n\n        scope.$watch attr.kapiScroll, (data) ->\n          return unless data\n\n          # element ease property\n          elmEase = data.ease || 'linear';\n          delete data.ease\n\n          actions = {}\n          actionFrames = []\n\n          # setup the rekapi keyframes\n          for scrollY, keyFrame of data\n\n            actionFrames.push(parseInt(scrollY)) if keyFrame.class || keyFrame.classUp || keyFrame.classRemove || keyFrame.classUpRemove || keyFrame.onUp || keyFrame.onDown\n\n            # keyframe onUp property\n            # fn reference that is called when scrolled up past keyframe\n            # this is not handled by rekapi, so we pull it out and tcb\n            if keyFrame.onUp\n              actions[scrollY] or= {}\n              angular.extend(actions[scrollY], {onUp: keyFrame.onUp})\n              delete keyFrame.onUp\n\n            # keyframe onDown property\n            # fn reference that is called when scrolled down past keyframe\n            # this is not handled by rekapi, so we pull it out and tcb\n            if keyFrame.onDown\n              actions[scrollY] or= {}\n              angular.extend(actions[scrollY], {onDown: keyFrame.onDown})\n              delete keyFrame.onDown\n\n            # keyframe class property\n            # added when scrolled down past keyframe\n            # removed when scrolled up past keyframe\n            # this is not handled by rekapi, so we pull it out and tcb\n            if keyFrame.class\n              actions[scrollY] or= {}\n              angular.extend(actions[scrollY], {class: keyFrame.class})\n              delete keyFrame.class\n\n            # keyframe classUp property\n            # added when scrolled up past keyframe\n            # removed when scrolled down past keyframe\n            # this is not handled by rekapi, so we pull it out and tcb\n            if keyFrame.classUp\n              actions[scrollY] or= {}\n              angular.extend(actions[scrollY], {classUp: keyFrame.classUp})\n              delete keyFrame.classUp\n\n            # keyframe classRemove property\n            # removed when scrolled down past keyframe\n            # this is not handled by rekapi, so we pull it out and tcb\n            if keyFrame.classRemove\n              actions[scrollY] or= {}\n              angular.extend(actions[scrollY], {classRemove: keyFrame.classRemove})\n              delete keyFrame.classRemove\n\n            # keyframe classUpRemove property\n            # removed when scrolled up past keyframe\n            # this is not handled by rekapi, so we pull it out and tcb\n            if keyFrame.classUpRemove\n              actions[scrollY] or= {}\n              angular.extend(actions[scrollY], {classUpRemove: keyFrame.classUpRemove})\n              delete keyFrame.classUpRemove\n\n            # keyframe ease property\n            # (will override or fallback to element ease property)\n            ease = {}\n            kfEase = elmEase\n            if keyFrame.ease?\n              if angular.isObject(keyFrame.ease)\n                ease = keyFrame.ease\n              else\n                kfEase = keyFrame.ease\n              delete keyFrame.ease\n\n            # comprehension of array-notation for easing\n            # (will override or fall back to keyframe ease propery as needed)\n            for prop, val of keyFrame\n              prop = dashersize(prop)\n              val = [val, kfEase] if not angular.isArray(val)\n              o = {}\n              o[prop] = val[1]\n              angular.extend(ease, o)\n              keyFrame[prop] = val[0]\n\n            actor.keyframe(scrollY, keyFrame, ease)\n\n          actionFrames.sort (a,b) -> a > b\n\n          y = scrollY = $window.scrollY\n          update()\n        , true  # deep watch\n\n        # respond to scroll event\n        angular.element($window).on 'scroll', ->\n          scrollY = $window.scrollY\n          update() if !updating # debounced update\n\n        scope.$on '$destroy', ->\n          rekapi.removeActor(actor)\n          angular.element($window).off 'scroll'"]}
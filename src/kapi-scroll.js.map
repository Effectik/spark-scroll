{"version":3,"sources":["kapi-scroll.coffee"],"names":[],"mappings":"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","file":"kapi-scroll.js","sourceRoot":"/source/","sourcesContent":["  angular.module('gilbox.kapiScroll', [])\n    .factory 'rekapi', ($document) -> new Rekapi($document[0].body)\n    .directive 'kapiScroll', (rekapi, $window) ->\n      (scope, element, attr) ->\n        actor = rekapi.addActor({ context: element[0] })\n        y = 0\n        lastScrollY = 0\n        scrollY = 0\n        animationFrame = new AnimationFrame()\n        updating = false\n\n        classes = {}\n        classes.frames = []\n        classFrameIdx = -1\n\n        classesUpdate = (d) ->\n\n          if d<=0 and classFrameIdx >= 0\n            idx = if (classFrameIdx >= classes.frames.length) then classFrameIdx-1 else classFrameIdx\n            while (idx >= 0 and y < classes.frames[idx])\n              element.removeClass(classes[classes.frames[idx]])\n              classFrameIdx = --idx\n\n          if d>=0 and classFrameIdx < classes.frames.length\n            idx = if (classFrameIdx < 0) then 0 else classFrameIdx\n            while (idx < classes.frames.length and y > classes.frames[idx])\n              element.addClass(classes[classes.frames[idx]])\n              classFrameIdx = ++idx\n\n\n        update = ->\n          d = scrollY - y\n          ad = Math.abs(d)\n          if ad < 1.5\n            updating = false\n            y = scrollY\n            rekapi.update(y)\n          else\n            updating = true\n            y += if ad>8 then d*0.25 else (if d > 0 then 1 else -1) # ease the scroll\n            rekapi.update(parseInt(y))\n            animationFrame.request(update)\n\n          classesUpdate(d)  # todo: debounce this more ?\n\n        scope.$watch attr.kapiScroll, (data) ->\n          return unless data\n\n          # element ease property\n          elmEase = data.ease || 'linear';\n          delete data.ease\n\n          classes = {}\n          classes.frames = []\n\n          # setup the rekapi keyframes\n          for scrollY, keyFrame of data\n\n            # keyframe class property\n            # this is not handled by rekapi, so we pull it out and tcb\n            if keyFrame.class?\n              classes[scrollY] = keyFrame.class\n              classes.frames.push(scrollY)\n              delete keyFrame.class\n\n            # keyframe ease property\n            # (will override or fallback to element ease property)\n            ease = {}\n            kfEase = elmEase\n            if keyFrame.ease?\n              if angular.isObject(keyFrame.ease)\n                ease = keyFrame.ease\n              else\n                kfEase = keyFrame.ease\n              delete keyFrame.ease\n\n            # comprehension of array-notation for easing\n            # (will override or fall back to keyframe ease propery as needed)\n            for prop, val of keyFrame\n              val = [val, kfEase] if not angular.isArray(val)\n              o = {}\n              o[prop] = val[1]\n              angular.extend(ease, o)\n              keyFrame[prop] = val[0]\n\n            actor.keyframe(scrollY, keyFrame, ease)\n\n          classes.frames.sort (a,b) -> a>b\n\n          y = scrollY = $window.scrollY\n          update()\n        , true  # deep watch\n\n        # respond to scroll event\n        angular.element($window).on 'scroll', ->\n          lastScrollY = scrollY\n          scrollY = $window.scrollY\n          update() if !updating # debounced update\n\n        scope.$on '$destroy', -> rekapi.removeActor(actor)"]}